# Используем официальный минималистичный образ Golang на базе Alpine Linux (очень легкий образ для небольшого размера контейнера)
FROM golang:1.17-alpine

# Устанавливаем рабочую директорию внутри контейнера, в которой будут выполняться все последующие команды
WORKDIR /app

# Копируем файлы go.mod и go.sum, которые описывают зависимости проекта, в рабочую директорию контейнера
COPY go.mod go.sum ./

# Выполняем команду загрузки всех зависимостей, указанных в go.mod, с помощью go mod, не копируя весь исходный код
RUN go mod download

# Копируем весь исходный код из текущей директории на хосте в рабочую директорию контейнера
COPY . .

# Компилируем Go-приложение и создаем исполняемый файл с именем main в корневой директории /app
RUN go build -o main ./cmd/app/

# Указываем Docker, что контейнер будет слушать на порту 8080 (это необходимо для сетевого взаимодействия с контейнером)
EXPOSE 8080

# Устанавливаем команду по умолчанию, которая будет выполняться при запуске контейнера — запуск скомпилированного исполняемого файла main
CMD ["./main"]
